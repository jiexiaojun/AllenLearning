package allen._91_99;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.InputStreamReader;


/**
 * 项目名称：testClass 
 * 类名称：Test95 
 * 类描述：数据库中存的十六进制数据转图片 
 * 创建人：汪俊 创建时间：2017-8-14 下午02:51:39 
 * 修改人：汪俊 修改时间：2017-8-14 下午02:51:39 
 * 修改备注：
 * @version 1.0
 */
public class Test95 {

	public static void main(String[] args) throws Exception {
		//直接用十六进制数据作为参数
//		saveToImgFileimage.png");
		//从文件中读取数据
		InputStream is=new FileInputStream("D://image.txt");
		InputStreamReader isr = new InputStreamReader(is);
		BufferedReader br = new BufferedReader(isr);
		String str = null;
		StringBuilder sb = new StringBuilder();
		while ((str = br.readLine()) != null) {
//			System.out.println(str);
			sb.append(str);
		}
		saveToImgFile(sb.toString().toUpperCase(),"D://image.png");

	}

	public static void saveToImgFile(String src,String output) {
		if (src == null || src.length() == 0) {
			return;
		}
		try {
			FileOutputStream out = new FileOutputStream(new File(output));
			byte[] bytes = src.getBytes();
			for (int i = 0; i < bytes.length; i += 2) {
				out.write(charToInt(bytes[i]) * 16 + charToInt(bytes[i + 1]));
			}
			out.close();
		} catch (Exception e) {
			e.printStackTrace();
		}
	}

	private static int charToInt(byte ch) {
		int val = 0;
		if (ch >= 0x30 && ch <= 0x39) {
			val = ch - 0x30;
		} else if (ch >= 0x41 && ch <= 0x46) {
			val = ch - 0x41 + 10;
		}
		return val;
	}
}
